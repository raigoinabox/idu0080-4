
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package localhost.raigo;

import java.io.IOException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

import ttu.idu0080.order.server.CourierService;
import ttu.idu0080.order.server.CourierServiceService;
import ttu.idu0080.order.server.EntAddress;
import ttu.idu0080.order.server.Order;

/**
 * This class was generated by Apache CXF 2.7.18 2017-03-06T11:21:56.037+02:00
 * Generated source version: 2.7.18
 * 
 */

@javax.jws.WebService(serviceName = "Services", portName = "ServicesPort", targetNamespace = "http://raigo.localhost/", wsdlLocation = "file:/home/raigo/Dokumendid/veebiteenused/src/BPTeenused/WebContent/services.wsdl", endpointInterface = "localhost.raigo.ServicesPortType")

public class ServicesPortTypeImpl implements ServicesPortType {

	private static final String LOG_FILE = "/home/raigo/.cache/veebiteenused/services.log";
	private static final Logger LOG = getLogger();

	private static Logger getLogger() {
		Logger logger = Logger.getLogger(ServicesPortTypeImpl.class.getName());
		try {
			System.setProperty("java.util.logging.SimpleFormatter.format", "%5$s%6$s%n");

			FileHandler fileHandler = new FileHandler(LOG_FILE);
			fileHandler.setFormatter(new SimpleFormatter());
			logger.addHandler(fileHandler);
			// logger.setLevel(Level.FINE);
		} catch (SecurityException e) {
			throw new RuntimeException(e);
		} catch (IOException e) {
			throw new RuntimeException(e);
		}

		return logger;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see localhost.raigo.ServicesPortType#getCouriers(*
	 */
	public java.util.List<Courier> getCouriers() {
		try {

			LOG.info("Begin getCouriers");

			CourierServiceService ss = new CourierServiceService();
			CourierService port = ss.getCourierServicePort();

			List<Courier> response = new java.util.ArrayList<Courier>();
			List<ttu.idu0080.order.server.Courier> serverCouriers = port.getAllCouriers();
			for (ttu.idu0080.order.server.Courier serverCourier : serverCouriers) {
				Courier courier = new Courier();
				courier.setId(serverCourier.getEnterprise());
				courier.setName(serverCourier.getName());

				LOG.info("Courier: [" + courier.getName() + "]");
				response.add(courier);
			}

			LOG.info("End getCouriers");
			return response;
		} catch (RuntimeException e) {
			LOG.log(Level.SEVERE, "", e);
			throw e;
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see localhost.raigo.ServicesPortType#getTransportOffer(int courierId
	 * ,)ttu.idu0080.order.server.Order order )*
	 */
	public TransportOffer getTransportOffer(int courierId, Order order) {
		LOG.info("Begin getTransportOffer");
		LOG.info(String.format("Received courierId = [%s], order.price = [%s], order.shippingAddress.county = [%s]",
				courierId, order.getPriceTotal(), order.getShippingAddress().getCounty()));

		CourierServiceService ss = new CourierServiceService();
		CourierService port = ss.getCourierServicePort();

		ttu.idu0080.order.server.Courier courier = port.getCourierById(courierId);
		LOG.info("courier.name = " + courier.getName());
		LOG.info("courier.percentFromOrder = " + courier.getPercentFromOrder());

		LOG.fine("courier.addresses.size = " + courier.getAddresses().size());
		int transportDiscount = 0;
		for (EntAddress address : courier.getAddresses()) {
			LOG.fine("courier.addresses.county = " + address.getCounty());
			if (Objects.equals(address.getCounty(), order.getShippingAddress().getCounty())) {
				transportDiscount += 30;
				LOG.info("Shipping address coincides with the courier address.");
				break;
			}
		}
		if (isAnyCountyEqual(courier.getAddresses(), order.getSeller().getAddresses())) {
			transportDiscount += 30;
			LOG.info("Seller address coincides with the courier address.");
		}

		LOG.info("Offer discount: [" + transportDiscount + " %]");
		float transportPrice = (order.getPriceTotal() * courier.getPercentFromOrder() * (100 - transportDiscount))
				/ (100 * 100);

		ThreadLocalRandom rng = ThreadLocalRandom.current();
		String offerId = "";
		for (int i = 0; i < 10; i++) {
			int nextInt = rng.nextInt(10 + 'Z' - 'A' + 1);
			if (nextInt < 10) {
				offerId += Integer.toString(nextInt);
			} else {
				char nextChar = (char) ((nextInt - 10) + 'A');
				offerId += Character.toString(nextChar);
			}
		}

		try {
			TransportOffer response = new TransportOffer();
			response.setOfferId(offerId);
			response.setTransportPrice(new BigDecimal(transportPrice));
			response.setDeliveryTime(BigInteger.valueOf(rng.nextInt(1, 8)));
			Calendar approxDelivDate = Calendar.getInstance();
			approxDelivDate.add(Calendar.DATE, response.getDeliveryTime().intValue());
			SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
			LOG.info(String.format("Offer(id = [%s], price = [%s], approx delivary date = [%s])", offerId,
					transportPrice, format.format(approxDelivDate.getTime())));
			return response;
		} catch (RuntimeException ex) {
			LOG.log(Level.SEVERE, "", ex);
			throw ex;
		} finally {
			LOG.info("End getTransportOffer");
		}
	}

	private boolean isAnyCountyEqual(List<EntAddress> addresses, List<EntAddress> addresses2) {
		for (EntAddress address : addresses) {
			for (EntAddress address2 : addresses2) {
				if (Objects.equals(address.getCounty(), address2.getCounty())) {
					return true;
				}
			}
		}

		return false;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see localhost.raigo.ServicesPortType#orderTransport(java.lang.String
	 * offerId )*
	 */
	public String orderTransport(String offerId) {
		LOG.info("Begin orderTransport");
		String trackingNumber = offerId.toLowerCase() + "#" + new SimpleDateFormat("yyyyMMdd").format(new Date());
		LOG.info("Pakkumisele " + offerId + " vastav tellimus registreeritud. Saadetise tracking number: "
				+ trackingNumber);
		LOG.info("End orderTransport");
		return trackingNumber;
	}
}
